{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/components/atoms/Project/Authors.js","webpack:///./src/components/atoms/PageHead.js","webpack:///./src/components/atoms/Button.js","webpack:///./src/components/atoms/SquareGradient.js","webpack:///./src/components/molecules/ProjectItem.js","webpack:///./src/components/organisms/ProjectsList.js","webpack:///./src/components/atoms/Project/Title.js"],"names":["ProjectsPage","location","pathname","text","list","projectList","StyledAuthors","styled","p","theme","white","Authors","authors","StyledWrapper","div","StyledHead","h2","PageHead","id","StyledLink","Link","StyledButton","button","Button","slug","onClick","to","StyledSquareGradient","svg","SquareGradient","data","width","height","viewBox","fill","xmlns","filter","x","y","rx","stroke","stroke-width","filterUnits","color-interpolation-filters","flood-opacity","result","in","type","values","dy","stdDeviation","mode","in2","x1","y1","x2","y2","gradientUnits","stop-color","offset","media700","media1000","ProjectItem","item","title","contributors","short_description","useState","setData","ProjectItemRef","useRef","useEffect","current","clientWidth","clientHeight","ref","Title","Paragraph","secondary","ProjectList","map","key","StyledTitle","h3"],"mappings":"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","file":"component---src-pages-projects-js-7b17410f8761fb6b9e30.js","sourcesContent":["import { Link } from \"gatsby\"\nimport * as React from \"react\"\nimport PageHead from \"../components/atoms/PageHead\"\nimport ProjectList from \"../components/organisms/ProjectsList\"\nimport MainTemplate from \"../components/templates/MainTemplate\"\nimport { projectList } from \"../constants/data\"\n\n\nconst ProjectsPage = ({location}) => {\n\n  return (\n    <MainTemplate location={location.pathname} >\n      <PageHead text={'Projects'} />\n      <ProjectList list={projectList} />\n    </MainTemplate>\n  )\n}\n\nexport default ProjectsPage\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledAuthors= styled.p`\n    display:flex;\n    font-family:nunito-light;\n    font-weight:normal;\n    font-size: 13px;\n    color ${({theme})=>theme.white};\n    \n`\n\nconst Authors = ({text, authors}) => {\n\n    return (\n        <StyledAuthors>{text} {authors}</StyledAuthors>\n    )\n  }\n  \nexport default Authors\n\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport LineGradient from './LineGradient'\n\nconst StyledWrapper = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    margin-bottom:100px;\n\n\n    >*{\n        margin-top:5px;\n    }\n\n`\nconst StyledHead = styled.h2`\n    color:white;\n    text-decoration:none;\n    text-align:center;\n    font-family:nunito-semibold;\n    font-size:40px;\n\n`\n\nconst PageHead = ({text}) => {\n    return (\n        <StyledWrapper>\n            <StyledHead>{text}</StyledHead>\n            <LineGradient id={\"head\"}/>\n        </StyledWrapper>\n    )\n  }\n  \nexport default PageHead","import { Link } from 'gatsby'\nimport React from 'react'\nimport styled from 'styled-components'\n\n\n\n\nconst StyledLink = styled(Link)`\n    align-self:flex-end;\n    \n    :hover{\n        cursor: pointer;\n    }\n`\nconst StyledButton = styled.button`   \n    width:153px;\n    height:41px;\n    background: linear-gradient(137.97deg, #57E0F4 -39%, #7F9DF4 39.36%, #AE00BE 100.89%);\n    border-radius: 12px;\n    border:none;\n    outline:none;\n    color:white;\n    justify-self:center;\n    align-self:center;\n    \n    :hover{\n        cursor: pointer;\n    }\n`\n\nconst Button = ({text,slug, onClick}) => {\n    return (\n        <StyledLink to={`/project/${slug}/`}>\n            <StyledButton onClick={onClick}>{text}</StyledButton>\n        </StyledLink>\n    )\n  }\n  \n  export default Button\n\n\n","import React from 'react'\nimport styled from 'styled-components'\n\n\nconst StyledSquareGradient = styled.svg`\n    position:absolute;\n    top:-20px;\n    left:-45px;\n    z-index:-1;\n`\n\n\nconst SquareGradient = ({data}) => {\n\n\n    return (\n        <StyledSquareGradient width=\"562\" height=\"494\" viewBox=\"0 0 562 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g filter=\"url(#filter0_d)\">\n                <rect x=\"14.9376\" y=\"2.93761\" width={data.width} height={data.height} rx=\"42.0624\" stroke=\"url(#paint0_linear)\" stroke-width=\"5.87521\"/>\n            </g>\n            <defs>\n            <filter id=\"filter0_d\" x=\"0\" y=\"0\" width=\"562\" height={\"493.284\"} filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\n            <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"/>\n            <feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"/>\n            <feOffset dy=\"8\"/>\n            <feGaussianBlur stdDeviation=\"6\"/>\n            <feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"/>\n            <feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\"/>\n            <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\"/>\n            </filter>\n            <linearGradient id=\"paint0_linear\" x1=\"-240.764\" y1=\"-144.646\" x2=\"362.564\" y2=\"625.962\" gradientUnits=\"userSpaceOnUse\">\n            <stop stop-color=\"#57E0F4\" />\n            <stop offset=\"0.560132\" stop-color=\"#7F9DF4\"/>\n            <stop offset=\"1\" stop-color=\"#AE00BE\"/>\n            </linearGradient>\n            </defs>\n        </StyledSquareGradient>\n    )\n  }\n  \n  export default SquareGradient\n\n\n","import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport Button from '../atoms/Button';\nimport Paragraph from '../atoms/Paragraph';\nimport Authors from '../atoms/Project/Authors';\nimport Title from '../atoms/Project/Title';\nimport SquareGradient from '../atoms/SquareGradient';\n\nconst StyledWrapper = styled.div`\n    position: relative;\n    display:flex;\n    flex-direction:column;\n    color:white;\n    width:280px;\n    margin-bottom:100px;\n    padding:20px 20px;\n    border-radius:30px;\n\n    > * {\n        margin-bottom:10px;\n    }\n    \n    @media  (min-width: ${({ theme }) => theme.media700}) {\n        margin:50px 100px 100px 100px;\n        width:340px;\n    }\n\n    @media  (min-width: ${({ theme }) => theme.media1000}) {\n\n    }\n\n`\n\n\n\n\nconst ProjectItem = ({item}) => {\n    let {title,slug, authors,contributors, short_description} = item\n    const [data,setData] = useState({width:0,height:0})\n\n    const ProjectItemRef = useRef(null)\n\nuseEffect(()=>{\n    setData({width:ProjectItemRef.current.clientWidth +60 ,height:ProjectItemRef.current.clientHeight+78})\n\n},[ProjectItemRef])\n\n    return (\n        <StyledWrapper ref={ProjectItemRef}>\n            <Title text={title}/>\n            <Authors text={'Authors: '} authors={authors} />\n            <Authors text={\"Contributors: \"} authors={contributors}/>\n            <Paragraph secondary text={short_description} />\n            <Button slug={slug} text={\"Read More\"}/>\n            <SquareGradient data={data} />\n            \n        </StyledWrapper>\n    )\n  }\n  \n  export default ProjectItem\n\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport ProjectItem from '../molecules/ProjectItem'\n\nconst StyledWrapper = styled.div`\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n    justify-content:center;\n\n  \n\n    @media  (min-width: ${({ theme }) => theme.media700}) {\n        flex-direction:row;\n        flex-wrap:wrap;\n    }\n\n`\n\nconst ProjectList = ({list}) => {\n\n    return (\n        <>\n            <StyledWrapper>\n                {list.map(item=> <ProjectItem key={item.id} item={item} /> )}\n            </StyledWrapper>\n        </>\n    )\n  }\n  \nexport default ProjectList\n\n\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledTitle = styled.h3`\n    font-family:nunito-regular;\n    font-weight:normal;\n    font-size: 20px;\n    color ${({theme})=>theme.white};\n    \n`\n\nconst Title = ({text}) => {\n    return (\n        <StyledTitle>{text}</StyledTitle>\n    )\n  }\n  \nexport default Title\n\n\n"],"sourceRoot":""}